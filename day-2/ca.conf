[req]
distinguished_name = req_distinguished_name
prompt             = no
x509_extensions    = ca_x509_extensions

[ca_x509_extensions]
basicConstraints = CA:TRUE
keyUsage         = cRLSign, keyCertSign

[req_distinguished_name]
C   = ID # Country
ST  = DKI Jakarta # State
L   = Jakarta Selatan # Location
CN  = CA # Common Name

[admin]
distinguished_name = admin_distinguished_name
prompt             = no
req_extensions     = default_req_extensions

[admin_distinguished_name]
CN = admin
O  = system:masters

# Service Accounts
#
# The Kubernetes Controller Manager leverages a key pair to generate
# and sign service account tokens as described in the
# [managing service accounts](https://kubernetes.io/docs/admin/service-accounts-admin/)
# documentation.

[service-accounts]
distinguished_name = service-accounts_distinguished_name
prompt             = no
req_extensions     = default_req_extensions

[service-accounts_distinguished_name]
CN = service-accounts

# Worker Nodes
#
# Kubernetes uses a [special-purpose authorization mode](https://kubernetes.io/docs/admin/authorization/node/)
# called Node Authorizer, that specifically authorizes API requests made
# by [Kubelets](https://kubernetes.io/docs/concepts/overview/components/#kubelet).
# In order to be authorized by the Node Authorizer, Kubelets must use a credential
# that identifies them as being in the `system:nodes` group, with a username
# of `system:node:<nodeName>`.

[node-01]
distinguished_name = node-01_distinguished_name
prompt             = no
req_extensions     = node-01_req_extensions

[node-01_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Node-01 Certificate"
subjectAltName       = DNS:node-01, IP:127.0.0.1, IP:10.91.12.55
subjectKeyIdentifier = hash

[node-01_distinguished_name]
CN = system:node:node-01
O  = system:nodes
C  = ID
ST = DKI Jakarta
L  = Jakarta Selatan

# [node-1]
# distinguished_name = node-1_distinguished_name
# prompt             = no
# req_extensions     = node-1_req_extensions

# [node-1_req_extensions]
# basicConstraints     = CA:FALSE
# extendedKeyUsage     = clientAuth, serverAuth
# keyUsage             = critical, digitalSignature, keyEncipherment
# nsCertType           = client
# nsComment            = "Node-1 Certificate"
# subjectAltName       = DNS:node-1, IP:127.0.0.1
# subjectKeyIdentifier = hash

# [node-1_distinguished_name]
# CN = system:node:node-1
# O  = system:nodes
# C  = US
# ST = Washington
# L  = Seattle


# Kube Proxy Section
[kube-proxy]
distinguished_name = kube-proxy_distinguished_name
prompt             = no
req_extensions     = kube-proxy_req_extensions

[kube-proxy_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Proxy Certificate"
subjectAltName       = DNS:kube-proxy, IP:127.0.0.1, IP: 10.91.12.55
subjectKeyIdentifier = hash

[kube-proxy_distinguished_name]
CN = system:kube-proxy
O  = system:node-proxier
C  = ID
ST = DKI Jakarta
L  = Jakarta Selatan


# Controller Manager
[kube-controller-manager]
distinguished_name = kube-controller-manager_distinguished_name
prompt             = no
req_extensions     = kube-controller-manager_req_extensions

[kube-controller-manager_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Controller Manager Certificate"
subjectAltName       = DNS:kube-controller-manager, IP:127.0.0.1, IP:10.91.12.54
subjectKeyIdentifier = hash

[kube-controller-manager_distinguished_name]
CN = system:kube-controller-manager
O  = system:kube-controller-manager
C  = ID
ST = DKI Jakarta
L  = Jakarta Selatan


# Scheduler
[kube-scheduler]
distinguished_name = kube-scheduler_distinguished_name
prompt             = no
req_extensions     = kube-scheduler_req_extensions

[kube-scheduler_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Kube Scheduler Certificate"
subjectAltName       = DNS:kube-scheduler, IP:127.0.0.1, IP:10.91.12.54
subjectKeyIdentifier = hash

[kube-scheduler_distinguished_name]
CN = system:kube-scheduler
O  = system:system:kube-scheduler
C  = ID
ST = DKI Jakarta
L  = Jakarta Selatan


# API Server
#
# The Kubernetes API server is automatically assigned the `kubernetes`
# internal dns name, which will be linked to the first IP address (`10.32.0.1`)
# from the address range (`10.32.0.0/24`) reserved for internal cluster
# services.

[kube-apiserver]
distinguished_name = kube-apiserver_distinguished_name
prompt             = no
req_extensions     = kube-apiserver_req_extensions

[kube-apiserver_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client, server
nsComment            = "Kube API Server Certificate"
subjectAltName       = @kube-apiserver_alt_names
subjectKeyIdentifier = hash

[kube-apiserver_alt_names]
IP.0  = 127.0.0.1
IP.1  = 10.91.12.54
DNS.0 = kubernetes # Do not change
DNS.1 = kubernetes.default # Do not change
DNS.2 = kubernetes.default.svc # Do not change
DNS.3 = kubernetes.default.svc.cluster # Do not change
DNS.4 = kubernetes.svc.cluster.local # Do not change
DNS.5 = server.kubernetes.local
DNS.6 = api-server.kubernetes.local
DNS.7 = master-01.kubernetes.local

[kube-apiserver_distinguished_name]
CN = kubernetes
C  = ID
ST = DKI Jakarta
L  = Jakarta Selatan


[default_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "Admin Client Certificate"
subjectKeyIdentifier = hash